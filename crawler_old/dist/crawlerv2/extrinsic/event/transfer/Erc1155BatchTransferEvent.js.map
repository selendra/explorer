{"version":3,"file":"Erc1155BatchTransferEvent.js","sourceRoot":"/","sources":["crawlerv2/extrinsic/event/transfer/Erc1155BatchTransferEvent.ts"],"names":[],"mappings":";;;;;AAAA,mCAAkC;AAClC,2DAA2D;AAC3D,sEAA8C;AAE9C,wFAAgE;AAEhE,MAAM,yBAA0B,SAAQ,iCAAuB;IACrD,KAAK,CAAC,cAAc,CAAC,OAAe,EAAE,YAAoB,EAAE,GAAa;QAC/E,MAAM,QAAQ,GAAG,IAAI,iBAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,wBAAY,CAAC,WAAW,EAAE,CAAC,CAAC;QACzH,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;QACnF,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,eAA+B;QAC3C,MAAM,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAErC,gBAAM,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QACvD,MAAM,CAAC,EAAE,cAAc,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,IAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QACjF,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC3C,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACjE,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;QACjF,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;QAErF,gBAAM,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,QAAQ,CAAC,OAAO,wBAAwB,WAAW,OAAO,SAAS,gBAAgB,MAAM,iBAAiB,OAAO,EAAE,CAAC,CAAC;QAC7J,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAClD,gBAAgB;YAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;gBAC1B,cAAc;gBACd,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBAC9B,YAAY;gBACZ,YAAY;gBACZ,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,MAAM;gBAC1C,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;gBAC/B,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;gBACjC,SAAS;gBACT,WAAW;aACZ,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,CACjB,SAAS,EACT,YAAY,EACZ,UAAU,CAAC,KAAK,CAAC,EACjB,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CACzB,CAAC;YACF,IAAI,CAAC,cAAc,CACjB,WAAW,EACX,cAAc,EACd,YAAY,CAAC,KAAK,CAAC,EACnB,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CACzB,CAAC;SACH;IACH,CAAC;CACF;AAED,kBAAe,yBAAyB,CAAC","sourcesContent":["import { Contract } from 'ethers';\nimport { nodeProvider } from '../../../../utils/connector';\nimport logger from '../../../../utils/logger';\nimport AccountManager from '../../../managers/AccountManager';\nimport DefaultErcTransferEvent from './DefaultErcTransferEvent';\n\nclass Erc1155BatchTransferEvent extends DefaultErcTransferEvent {\n  private async balanceOfBatch(address: string, tokenAddress: string, ids: string[]): Promise<string[]> {\n    const contract = new Contract(tokenAddress, this.contract.compiled_data[this.contract.name], nodeProvider.getProvider());\n    const result = await contract.balanceOfBatch(Array(ids.length).fill(address), ids);\n    return result.map((amount: any) => amount.toString());\n  }\n\n  async process(accountsManager: AccountManager): Promise<void> {\n    await super.process(accountsManager);\n\n    logger.info('Processing Erc1155 batch transfer event');\n    const [, fromEvmAddress, toEvmAddress, nftIds, amounts] = this.data!.parsed.args;\n    const tokenAddress = this.contract.address;\n    const toAddress = await accountsManager.useEvm(toEvmAddress);\n    const fromAddress = await accountsManager.useEvm(fromEvmAddress);\n    const toBalances = await this.balanceOfBatch(toEvmAddress, tokenAddress, nftIds);\n    const fromBalances = await this.balanceOfBatch(fromEvmAddress, tokenAddress, nftIds);\n\n    logger.info(`Processing ERC1155: ${this.contract.address} batch transfer from ${fromAddress} to ${toAddress} -> \\n\\tIds: ${nftIds}\\n]\\tAmounts: ${amounts}`);\n    for (let index = 0; index < nftIds.length; index++) {\n      // Adding transe\n      this.transfers.push({\n        blockId: this.head.blockId,\n        fromEvmAddress,\n        timestamp: this.head.timestamp,\n        toEvmAddress,\n        tokenAddress,\n        type: 'ERC1155',\n        denom: this.contract.contract_data?.symbol,\n        nftId: nftIds[index].toString(),\n        amount: amounts[index].toString(),\n        toAddress,\n        fromAddress,\n      });\n\n      this.addTokenHolder(\n        toAddress,\n        toEvmAddress,\n        toBalances[index],\n        nftIds[index].toString(),\n      );\n      this.addTokenHolder(\n        fromAddress,\n        fromEvmAddress,\n        fromBalances[index],\n        nftIds[index].toString(),\n      );\n    }\n  }\n}\n\nexport default Erc1155BatchTransferEvent;\n"]}