{"version":3,"file":"Erc1155SingleTransferEvent.js","sourceRoot":"/","sources":["crawlerv2/extrinsic/event/transfer/Erc1155SingleTransferEvent.ts"],"names":[],"mappings":";;;;;AAAA,qDAA6D;AAC7D,sEAA8C;AAE9C,wFAAgE;AAEhE,MAAM,0BAA2B,SAAQ,iCAAuB;IAC9D,KAAK,CAAC,OAAO,CAAC,eAA+B;QAC3C,MAAM,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACrC,gBAAM,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;QACxD,MAAM,CAAC,EAAE,cAAc,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,IAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QAC/E,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC3C,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEjE,gBAAM,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,QAAQ,CAAC,OAAO,yBAAyB,WAAW,OAAO,SAAS,WAAW,KAAK,CAAC,QAAQ,EAAE,YAAY,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACxK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAClB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,SAAS;YACT,WAAW;YACX,cAAc;YACd,YAAY;YACZ,YAAY;YACZ,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,MAAM;YAC1C,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE;YACvB,MAAM,EAAE,MAAM,CAAC,QAAQ,EAAE;SAC1B,CAAC,CAAC;QAEH,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,MAAM,SAAS,GAAG,MAAM,IAAA,wBAAgB,EAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;YAEjF,IAAI,CAAC,cAAc,CACjB,SAAS,EACT,YAAY,EACZ,SAAS,EACT,KAAK,CAAC,QAAQ,EAAE,CACjB,CAAC;SACH;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,MAAM,WAAW,GAAG,MAAM,IAAA,wBAAgB,EAAC,cAAc,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;YAErF,IAAI,CAAC,cAAc,CACjB,WAAW,EACX,cAAc,EACd,WAAW,EACX,KAAK,CAAC,QAAQ,EAAE,CACjB,CAAC;SACH;IACH,CAAC;CACF;AAED,kBAAe,0BAA0B,CAAC","sourcesContent":["import { balanceOfErc1155 } from '../../../../crawler/utils';\nimport logger from '../../../../utils/logger';\nimport AccountManager from '../../../managers/AccountManager';\nimport DefaultErcTransferEvent from './DefaultErcTransferEvent';\n\nclass Erc1155SingleTransferEvent extends DefaultErcTransferEvent {\n  async process(accountsManager: AccountManager): Promise<void> {\n    await super.process(accountsManager);\n    logger.info('Processing Erc1155 single transfer event');\n    const [, fromEvmAddress, toEvmAddress, nftId, amount] = this.data!.parsed.args;\n    const abi = this.contract.compiled_data[this.contract.name];\n    const tokenAddress = this.contract.address;\n    const toAddress = await accountsManager.useEvm(toEvmAddress);\n    const fromAddress = await accountsManager.useEvm(fromEvmAddress);\n\n    logger.info(`Processing ERC1155: ${this.contract.address} single transfer from ${fromAddress} to ${toAddress} -> Id: ${nftId.toString()} Amount: ${amount.toString()}`);\n    this.transfers.push({\n      blockId: this.head.blockId,\n      timestamp: this.head.timestamp,\n      toAddress,\n      fromAddress,\n      fromEvmAddress,\n      toEvmAddress,\n      tokenAddress,\n      denom: this.contract.contract_data?.symbol,\n      type: 'ERC1155',\n      nftId: nftId.toString(),\n      amount: amount.toString(),\n    });\n\n    if (toAddress !== '0x') {\n      const toBalance = await balanceOfErc1155(toEvmAddress, tokenAddress, nftId, abi);\n\n      this.addTokenHolder(\n        toAddress,\n        toEvmAddress,\n        toBalance,\n        nftId.toString(),\n      );\n    }\n    if (fromAddress !== '0x') {\n      const fromBalance = await balanceOfErc1155(fromEvmAddress, tokenAddress, nftId, abi);\n\n      this.addTokenHolder(\n        fromAddress,\n        fromEvmAddress,\n        fromBalance,\n        nftId.toString(),\n      );\n    }\n  }\n}\n\nexport default Erc1155SingleTransferEvent;\n"]}