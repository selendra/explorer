{"version":3,"file":"Erc721TransferEvent.js","sourceRoot":"/","sources":["crawlerv2/extrinsic/event/transfer/Erc721TransferEvent.ts"],"names":[],"mappings":";;;;;AACA,qDAAsD;AACtD,sEAA8C;AAE9C,gFAAwD;AAExD,MAAM,mBAAoB,SAAQ,6BAAmB;IAArD;;QACE,SAAI,GAAc,QAAQ,CAAC;IAiD7B,CAAC;IA/CC,KAAK,CAAC,OAAO,CAAC,eAA+B;QAC3C,MAAM,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAErC,gBAAM,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QAChD,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC3C,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,IAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QACjD,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC5D,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,MAAM,YAAY,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;QACnC,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACvC,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEjE,gBAAM,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,QAAQ,CAAC,OAAO,kBAAkB,WAAW,OAAO,SAAS,EAAE,CAAC,CAAC;QACxG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAClB,MAAM,EAAE,GAAG;YACX,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,SAAS;YACT,WAAW;YACX,cAAc;YACd,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,YAAY;YACZ,YAAY;YACZ,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,MAAM;YAC1C,KAAK;SACN,CAAC,CAAC;QAEH,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,MAAM,SAAS,GAAG,MAAM,IAAA,iBAAS,EAAC,YAAY,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;YACnE,IAAI,CAAC,cAAc,CACjB,SAAS,EACT,YAAY,EACZ,SAAS,EACT,KAAK,CACN,CAAC;SACH;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,MAAM,WAAW,GAAG,MAAM,IAAA,iBAAS,EAAC,cAAc,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;YACvE,IAAI,CAAC,cAAc,CACjB,WAAW,EACX,cAAc,EACd,WAAW,EACX,KAAK,CACN,CAAC;SACH;IACH,CAAC;CACF;AAED,kBAAe,mBAAmB,CAAC","sourcesContent":["import { TokenType } from '../../../../crawler/types';\nimport { balanceOf } from '../../../../crawler/utils';\nimport logger from '../../../../utils/logger';\nimport AccountManager from '../../../managers/AccountManager';\nimport NftTokenHolderEvent from './NftTokenHolderEvent';\n\nclass Erc721TransferEvent extends NftTokenHolderEvent {\n  name: TokenType = 'ERC721';\n\n  async process(accountsManager: AccountManager): Promise<void> {\n    await super.process(accountsManager);\n\n    logger.info('Processing Erc721 transfer event');\n    const tokenAddress = this.contract.address;\n    const [from, to, nftID] = this.data!.parsed.args;\n    const abi = this.contract.compiled_data[this.contract.name];\n    const nftId = nftID.toString();\n    const toEvmAddress = to.toString();\n    const fromEvmAddress = from.toString();\n    const toAddress = await accountsManager.useEvm(toEvmAddress);\n    const fromAddress = await accountsManager.useEvm(fromEvmAddress);\n\n    logger.info(`Processing ERC721: ${this.contract.address} transfer from ${fromAddress} to ${toAddress}`);\n    this.transfers.push({\n      amount: '1',\n      blockId: this.head.blockId,\n      toAddress,\n      fromAddress,\n      fromEvmAddress,\n      timestamp: this.head.timestamp,\n      toEvmAddress,\n      tokenAddress,\n      type: 'ERC721',\n      denom: this.contract.contract_data?.symbol,\n      nftId,\n    });\n\n    if (toAddress !== '0x') {\n      const toBalance = await balanceOf(toEvmAddress, tokenAddress, abi);\n      this.addTokenHolder(\n        toAddress,\n        toEvmAddress,\n        toBalance,\n        nftId,\n      );\n    }\n    if (fromAddress !== '0x') {\n      const fromBalance = await balanceOf(fromEvmAddress, tokenAddress, abi);\n      this.addTokenHolder(\n        fromAddress,\n        fromEvmAddress,\n        fromBalance,\n        nftId,\n      );\n    }\n  }\n}\n\nexport default Erc721TransferEvent;\n"]}