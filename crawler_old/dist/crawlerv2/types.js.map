{"version":3,"file":"types.js","sourceRoot":"/","sources":["crawlerv2/types.ts"],"names":[],"mappings":"","sourcesContent":["import { FrameSystemEventRecord } from '@polkadot/types/lookup';\nimport type { AnyTuple } from '@polkadot/types/types';\nimport { ExtrinsicStatus, RawEventData, SignedExtrinsicData } from '../crawler/types';\n\n// export interface ProcessModule {\n//   process(accountsManager: AccountManager): Promise<void>;\n//   save(): Promise<void>;\n// }\nexport type Event = FrameSystemEventRecord;\n\nexport interface ExtrinsicData {\n  id: number;\n  index: number;\n  status: ExtrinsicStatus;\n  signedData?: SignedExtrinsicData;\n  args: AnyTuple;\n}\n\nexport interface EventData {\n  event: Event;\n  index: number;\n  blockId: number;\n  timestamp: string;\n}\n\nexport interface CompleteEvmData {\n  raw: RawEventData;\n  parsed?: any;\n}\n\nexport type TransferType = 'Native' | 'ERC20' | 'ERC721' | 'ERC1155';\n\nexport interface Transfer {\n  blockId: number;\n\n  denom?: string;\n  nftId?: string;\n\n  amount: string;\n  type: TransferType;\n\n  toAddress: string;\n  fromAddress: string;\n  tokenAddress: string;\n  fromEvmAddress: string;\n  toEvmAddress: string;\n\n  timestamp: string;\n}\n"]}