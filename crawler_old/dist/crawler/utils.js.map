{"version":3,"file":"utils.js","sourceRoot":"/","sources":["crawler/utils.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAClC,kDAAkD;AAG3C,MAAM,iBAAiB,GAAG,KAAK,EAAE,UAAkB,EAAmB,EAAE;IAC7E,MAAM,OAAO,GAAG,MAAM,wBAAY,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IAC5G,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC5B,CAAC,CAAC;AAHW,QAAA,iBAAiB,qBAG5B;AAEK,MAAM,SAAS,GAAG,KAAK,EAAE,OAAe,EAAE,KAAa,EAAE,GAAQ,EAAmB,EAAE;IAC3F,MAAM,QAAQ,GAAG,IAAI,iBAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,wBAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IACtE,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAClD,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC5B,CAAC,CAAC;AAJW,QAAA,SAAS,aAIpB;AAEK,MAAM,gBAAgB,GAAG,KAAK,EAAE,OAAe,EAAE,KAAa,EAAE,GAAW,EAAE,GAAQ,EAAmB,EAAE;IAC/G,MAAM,QAAQ,GAAG,IAAI,iBAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,wBAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IACtE,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACvD,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC5B,CAAC,CAAC;AAJW,QAAA,gBAAgB,oBAI3B","sourcesContent":["import { Contract } from 'ethers';\nimport { nodeProvider } from '../utils/connector';\nimport { ABI } from './types';\n\nexport const findNativeAddress = async (evmAddress: string): Promise<string> => {\n  const address = await nodeProvider.query((provider) => provider.api.query.evmAccounts.accounts(evmAddress));\n  return address.toString();\n};\n\nexport const balanceOf = async (address: string, token: string, abi: ABI): Promise<string> => {\n  const contract = new Contract(token, abi, nodeProvider.getProvider());\n  const balance = await contract.balanceOf(address);\n  return balance.toString();\n};\n\nexport const balanceOfErc1155 = async (address: string, token: string, nft: string, abi: ABI): Promise<string> => {\n  const contract = new Contract(token, abi, nodeProvider.getProvider());\n  const balance = await contract.balanceOf(address, nft);\n  return balance.toString();\n};\n"]}