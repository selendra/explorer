{"version":3,"file":"utils.js","sourceRoot":"/","sources":["utils/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { utils } from 'ethers';\nimport APP_CONFIG from '../config';\nimport { ERC20Data } from '../crawler/types';\n\nexport const SELENDRA_CONTRACT_ADDRESS = '0x0000000000000000000100000000000000000000';\nexport const SELENDRA_DEFAULT_DATA: ERC20Data = {\n  decimals: 18,\n  symbol: 'SEL',\n  name: 'Selendra',\n};\n\n/* eslint no-promise-executor-return: \"off\" */\nexport const wait = async (ms: number): Promise<void> => new Promise((res) => setTimeout(res, ms));\n\nexport const ensure = (condition: boolean, message: string): void => {\n  if (!condition) {\n    throw new Error(message);\n  }\n};\n\nexport const min = (...args: number[]): number => {\n  if (args.length === 0) {\n    throw new Error('Given array is empty!');\n  }\n  return args.reduce(\n    (prev, current) => (prev < current ? prev : current),\n    args[0],\n  );\n};\nexport const max = (...args: number[]): number => {\n  if (args.length === 0) {\n    throw new Error('Given array is empty!');\n  }\n  return args.reduce(\n    (prev, current) => (prev > current ? prev : current),\n    args[0],\n  );\n};\n\nexport const range = (from: number, to: number): number[] => Array(to - from)\n  .fill(0)\n  .map((_, index) => from + index);\n\nexport const dropDuplicates = <Object, Key extends keyof Object>(\n  objects: Object[],\n  key: Key,\n): Object[] => {\n  const existingKeys = new Set<Object[Key]>();\n  const filtered: Object[] = [];\n\n  for (let index = objects.length - 1; index >= 0; index -= 1) {\n    const obj = objects[index];\n    if (!existingKeys.has(obj[key])) {\n      filtered.push(obj);\n      existingKeys.add(obj[key]);\n    }\n  }\n\n  return filtered;\n};\nexport const dropDuplicatesMultiKey = <Object, Key extends keyof Object>(\n  objects: Object[],\n  keys: Key[],\n): Object[] => {\n  const existingKeys = new Set<string>();\n  const filtered: Object[] = [];\n\n  for (let index = objects.length - 1; index >= 0; index -= 1) {\n    const obj = objects[index];\n    const ids = keys.map((key) => obj[key]).join(', ');\n    if (!existingKeys.has(ids)) {\n      filtered.push(obj);\n      existingKeys.add(ids);\n    }\n  }\n\n  return filtered;\n};\n\nexport const resolvePromisesAsChunks = async <T>(\n  requests: Promise<T>[],\n): Promise<T[]> => {\n  const chunks: T[] = [];\n  let currentChunks: Promise<T>[] = [];\n\n  for (let index = 0; index < requests.length; index += 1) {\n    currentChunks.push(requests[index]);\n\n    if (currentChunks.length === APP_CONFIG.chunkSize) {\n      const resolvedChunk = await Promise.all(currentChunks);\n      chunks.push(...resolvedChunk);\n      currentChunks = [];\n    }\n  }\n\n  const resolvedChunk = await Promise.all(currentChunks);\n  chunks.push(...resolvedChunk);\n  return chunks;\n};\n\nexport const removeUndefinedItem = <Type, >(item: (Type|undefined)): item is Type => item !== undefined;\n\nexport const toChecksumAddress = (address: string): string => utils.getAddress(address.trim().toLowerCase());\n\nexport const promiseWithTimeout = <T>(\n  promise: Promise<T>,\n  ms: number,\n  timeoutError = new Error('Promise timed out'),\n): Promise<T> => {\n  // create a promise that rejects in milliseconds\n  const timeout = new Promise<never>((_, reject) => {\n    setTimeout(() => {\n      reject(timeoutError);\n    }, ms);\n  });\n\n  // returns a race between timeout and the passed promise\n  return Promise.race<T>([promise, timeout]);\n};\n"]}