{"version":3,"file":"Performance.js","sourceRoot":"/","sources":["utils/Performance.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,oDAA4B;AAE5B,MAAM,WAAY,SAAQ,eAAa;IAAvC;;QACU,aAAQ,GAAG,CAAC,CAAC;IAgBvB,CAAC;IAdC,IAAI,CAAC,KAAa;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;YACzD,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,GAAG;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QACD,gBAAM,CAAC,IAAI,CAAC,kBAAkB,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;IACrF,CAAC;CACF;AAED,kBAAe,WAAW,CAAC","sourcesContent":["import logger from './logger';\nimport Queue from './Queue';\n\nclass Performance extends Queue<number> {\n  private duration = 0;\n\n  push(value: number) {\n    this.values.push(value);\n    this.duration += value;\n    if (this.maxLength && this.values.length > this.maxLength) {\n      this.duration -= this.pop();\n    }\n  }\n\n  log() {\n    if (!this.maxLength) {\n      throw new Error('Max length is not defined');\n    }\n    logger.info(`Crawler speed: ${1000 / ((this.duration / this.values.length))} bps`);\n  }\n}\n\nexport default Performance;\n"]}