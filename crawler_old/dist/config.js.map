{"version":3,"file":"config.js","sourceRoot":"/","sources":["config.ts"],"names":[],"mappings":";;AAAA,yBAAsB;AAEtB,MAAM,QAAQ,GAAG,CAAC,YAAoB,EAAE,KAAc,EAAU,EAAE;IAChE,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,YAAY,CAAC;KACrB;IACD,OAAO,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC7B,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG;IACtB,qBAAqB;CACtB,CAAC;AAEF,kBAAe;IACb,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAa,CAAC,CAAC,CAAC,eAAe;IACnH,cAAc,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;IAC1D,gBAAgB,EAAE,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;IAChE,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;IACjD,YAAY,EAAE,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;IACtD,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;IACvC,qBAAqB,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;IACnD,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;IACpC,0BAA0B,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,EAAE;IAC7D,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;IAC5B,mBAAmB,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,GAAG;IAC5D,4BAA4B,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B,IAAI,GAAG;IAChF,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,kCAAkC;IAClF,oBAAoB,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK;IAEhH,cAAc,EAAE;QACd,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,SAAS;QAC5C,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;QAC/C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,kBAAkB;QACrD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,kBAAkB;QAC7D,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,kBAAkB;KAC9D;CACF,CAAC","sourcesContent":["import 'dotenv/config'\n\nconst toNumber = (defaultValue: number, value?: string): number => {\n  if (!value) {\n    return defaultValue;\n  }\n  return parseInt(value, 10);\n};\n\nconst defaultNodeUrls = [\n  'ws://127.0.0.1:9944',\n];\n\nexport default {\n  nodeUrls: process.env.NODE_PROVIDER_URLS ? JSON.parse(process.env.NODE_PROVIDER_URLS) as string[] : defaultNodeUrls,\n  startBlockSize: toNumber(32, process.env.START_BLOCK_SIZE),\n  maxBlocksPerStep: toNumber(256, process.env.MAX_BLOCKS_PER_STEP),\n  chunkSize: toNumber(1024, process.env.CHUNK_SIZE),\n  pollInterval: toNumber(100, process.env.POLL_INTERVAL),\n  sentryDns: process.env.SENTRY_DNS || '',\n  sentryBacktrackingDns: process.env.SENTRY_DNS || '',\n  environment: process.env.ENVIRONMENT,\n  selendraswapFactoryAddress: process.env.FACTORY_ADDRESS || '',\n  network: process.env.NETWORK,\n  subcontractInterval: process.env.SUBCONTRACT_INTERVAL || 100,\n  verifiedContractSyncInterval: process.env.VERIFIED_CONTRACT_SYNC_INTERVAL || 100,\n  liveGraphqlUrl: process.env.LIVE_GRAPHQL_URL || 'http://localhost:8080/v1/graphql',\n  verifiedContractSync: process.env.VERIFIED_CONTRACT_SYNC ? process.env.VERIFIED_CONTRACT_SYNC === 'true' : false,\n\n  postgresConfig: {\n    host: process.env.POSTGRES_HOST || '0.0.0.0',\n    port: toNumber(5432, process.env.POSTGRES_PORT),\n    user: process.env.POSTGRES_USER || 'selendraexplorer',\n    database: process.env.POSTGRES_DATABASE || 'selendraexplorer',\n    password: process.env.POSTGRES_PASSWORD || 'selendraexplorer',\n  },\n};\n"]}