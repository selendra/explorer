swagger: "2.0"
info:
  version: 0.1.0
  title: Selendra scan swagger
  license:
    name: MIT
host: scan-api.selendra.org
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /block/{block_number}:
    get:
      summary: Get block detail by block number
      operationId: BlockByBlockNumer
      tags:
        - block
      parameters:
        - name: block_number
          in: path
          required: true
          description: Use block number to retrieve block detail
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Block'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /block/all/{page_number}:
    get:
      summary: Get all block detail by page number
      operationId: BlocksByPageNumber
      tags:
        - block
      parameters:
        - name: page_number
          in: path
          required: true
          description: Use page number to retrieve all blocks
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Blocks'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /account/{address}:
    get:
      summary: Get account detail by address
      operationId: AccountByAddress
      tags:
        - account
      parameters:
        - name: address
          in: path
          required: true
          description: Use address to retrieve account detail
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Account'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /account/all/{page_number}:
    get:
      summary: Get all accounts by page nubmer
      operationId: AccountsByPage
      tags:
        - account
      parameters:
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all accounts 
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Accounts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /account/extrinsics/{address}/{page_number}:
    get:
      summary: Get all accounts by page address
      operationId: AccountExtrinsicsByAddress
      tags:
        - account
      parameters:
        - name: address
          in: path
          required: true
          description: Use address to retrieve all extrinsics
          type: string
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all extrinsics in account
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/AccountExtrinsics'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /account/transfer/{address}/{page_number}:
    get:
      summary: Get all accounts by page address
      operationId: AccountTransferByAddress
      tags:
        - account
      parameters:
        - name: address
          in: path
          required: true
          description: Use address to retrieve all transfers
          type: string
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all transfers in account
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/AccountTransfers'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /account/reward/{address}/{page_number}:
    get:
      summary: Get all accounts by page address
      operationId: AccountRewardByAddress
      tags:
        - account
      parameters:
        - name: address
          in: path
          required: true
          description: Use address to retrieve all rewards
          type: string
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all rewards in account
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/AccountRewards'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /account/slash/{address}/{page_number}:
    get:
      summary: Get all accounts by page address
      operationId: AccountSlashByAddress
      tags:
        - account
      parameters:
        - name: address
          in: path
          required: true
          description: Use address to retrieve all slashs
          type: string
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all slashs in account
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/AccountSlashs'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /extrinsic/{hash}:
    get:
      summary: Get all extrinsics by hash
      operationId: ExtrinsicByHash
      tags:
        - extrinsic
      parameters:
        - name: hash
          in: path
          required: true
          description: Use hash to retrieve extrinsics
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Extrinsic'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /extrinsic/all/{page_number}:
    get:
      summary: Get all extrinsics by page nubmer
      operationId: ExtrinsicBypage
      tags:
        - extrinsic
      parameters:
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all extrinsics 
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Extrinsics'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /extrinsic/signed/{page_number}:
    get:
      summary: Get all signed extrinsics by page nubmer
      operationId: ExtrinsicSignedBypage
      tags:
        - extrinsic
      parameters:
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all signed extrinsics 
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Extrinsics'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /extrinsic/{module}/{page_number}:
    get:
      summary: Get all extrinsics by module and page nubmer 
      operationId: ExtrinsicsByModule
      tags:
        - extrinsic
      parameters:
        - name: module
          in: path
          required: true
          description: Use module to retrieve all extrinsic with specific module
          type: string
          enum: 
            [
              authoritydiscovery, 
              authorship,
              babe,
              bagslist,
              balances,
              bounties,
              configuration,
              council,
              democracy,
              dmp,
              electionprovidermultiphase,
              grandpa,
              historical,
              hrmp,
              identity,
              imonline,
              indices,
              initializer,
              multisig,
              parainherent,
              paras,
              parasdisputes,
              phragmenElection,
              preimage,
              proxy,
              recovery,
              registrar,
              scheduler,
              session,
              slots,
              staking,
              system,
              technicalCommittee,
              technicalMembership,
              timestamp,
              tips,
              treasury,
              ump,
              utility,
              vesting,
              xcmPallet,
            ]
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all event
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Extrinsics'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /transfer/{hash}:
    get:
      summary: Get all transfers by hash
      operationId: TransferByHash
      tags:
        - transfer
      parameters:
        - name: hash
          in: path
          required: true
          description: Use hash to retrieve transfers
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Transfer'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /transfer/all/{page_number}:
    get:
      summary: Get all transfers by page nubmer
      operationId: TransferBypage
      tags:
        - transfer
      parameters:
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all transfers 
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Transfers'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /event/{module}/{page_number}:
    get:
      summary: Get all event by module and page nubmer 
      operationId: EventByModule
      tags:
        - event
      parameters:
        - name: module
          in: path
          required: true
          description: Use module to retrieve all event with specific module
          type: string
          enum: 
            [
              authoritydiscovery, 
              authorship,
              babe,
              bagslist,
              balances,
              bounties,
              configuration,
              council,
              democracy,
              dmp,
              electionprovidermultiphase,
              grandpa,
              historical,
              hrmp,
              identity,
              imonline,
              indices,
              initializer,
              multisig,
              parainherent,
              paras,
              parasdisputes,
              phragmenElection,
              preimage,
              proxy,
              recovery,
              registrar,
              scheduler,
              session,
              slots,
              staking,
              system,
              technicalCommittee,
              technicalMembership,
              timestamp,
              tips,
              treasury,
              ump,
              utility,
              vesting,
              xcmPallet,
            ]
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all event
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Event'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /event/all/{page_number}:
    get:
      summary: Get all event by page nubmer
      operationId: EventBypage
      tags:
        - event
      parameters:
        - name: page_number
          in: path
          required: true
          description: Use page nuber to retrieve all event 
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Events'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Block:
    type: "object"
    properties:
      blockNumber:
        type: integer
        format: int64
      finalized:
        type: boolean
      blockAuthor:
        type: string
      blockAuthorName:
        type: string
      blockHash:
        type: string
      parentHash:
        type: string
      extrinsicsRoot:
        type: string
      stateRoot:
        type: string
      activeEra:
        type: integer
        format: int64
      currentIndex:
        type: integer
        format: int64
      runtimeVersion:
        type: integer
        format: int16
      totalEvents:
        type: integer
        format: int16
      totalExtrinsics:
        type: integer
        format: int16
      totalIssuance:
        type: integer
        format: int64
      timestamp:
        type: integer
        format: int64
  Blocks:
     type: "object"
     properties:
      total_block:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      blocks:
        type: array
        items:
          $ref: '#/definitions/Block'
  Account:
     type: "object"
     properties:
      accountId:
        type: string
      identityDisplay:
        type: string
      totalBalance:
        type: integer
        format: int64
      availableBalance:
        type: integer
        format: int64
      freeBalance:
        type: integer
        format: int64
      lockedBalance:
        type: integer
        format: int64
      reservedBalance:
        type: integer
        format: int64
      timestamp:
        type: integer
        format: int64
  Accounts:
     type: "object"
     properties:
      total_account:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      accounts:
        type: array
        items:
         $ref: '#/definitions/Account'
  AccountExtrinsic:
     type: "object"
     properties:
      blockNumber:
        type: integer
        format: int64
      extrinsicIndex:
        type: integer
        format: int16
      success:
        type: boolean
      section:
        type: string
      method:
        type: string
      hash:
        type: string
      timestamp:
        type: integer
        format: int64
  AccountExtrinsics:
     type: "object"
     properties:
      total_extriniscs:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      extriniscs:
        type: array
        items:
         $ref: '#/definitions/AccountExtrinsic'
  AccountTransfer:
    type: "object"
    properties:
      blockNumber:
        type: integer
        format: int64
      extrinsicIndex:
        type: integer
        format: int16
      destination:
        type: string
      amount:
        type: integer
        format: int64
      feeAmount:
        type: integer
        format: int32
      success:
        type: boolean
      hash:
        type: string
      timestamp:
        type: integer
        format: int64
  AccountTransfers:
    type: "object"
    properties:
      total_transfer:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      transfers:
        type: array
        items:
         $ref: '#/definitions/AccountTransfer'
  AccountReward:
    type: "object"
    properties:
      blockNumber:
        type: integer
        format: int64
      eventIndex:
        type: integer
        format: int16
      amount:
        type: integer
        format: int64
      era:
        type: integer
        format: int16
      validatorStashAddress:
        type: string
      timestamp:
        type: integer
        format: int64
  AccountRewards:
    type: "object"
    properties:
      total_list_rewards:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      reward_list:
        type: array
        items:
         $ref: '#/definitions/AccountReward'
  AccountSlash:
    type: "object"
    properties:
      blockNumber:
        type: integer
        format: int64
      eventIndex:
        type: integer
        format: int16
      amount:
        type: integer
        format: int64
      era:
        type: integer
        format: int16
      timestamp:
        type: integer
        format: int64
  AccountSlashs:
    type: "object"
    properties:
      total_list_slash:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      slash_list:
        type: array
        items:
         $ref: '#/definitions/AccountSlash'
  Extrinsic:
    type: "object"
    properties:
      blockNumber:
        type: integer
        format: int64
      extrinsicIndex:
        type: integer
        format: int16
      signer:
        type: string
      hash:
        type: string
      method:
        type: string
      section:
        type: string
      args:
        type: string
      argsDef:
        type: string
      doc:
        type: string
      feeDetails:
        type: string
      feeInfo:
        type: string
      errorMessage:
        type: string
      isSigned:
        type: boolean
      success:
        type: boolean
      timestamp:
        type: integer
        format: int64
  Extrinsics:
    type: "object"
    properties:
      total_extrinsics:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      extrinsics:
        type: array
        items:
         $ref: '#/definitions/Extrinsic'
  Transfer:
    type: "object"
    properties:
      blockNumber:
        type: integer
        format: int64
      extrinsicIndex:
        type: integer
        format: int16
      hash:
        type: string
      source:
        type: string
      destination:
        type: string
      amount:
        type: integer
        format: int64
      feeAmount:
        type: integer
        format: int64
      method:
        type: string
      success:
        type: boolean
      errorMessage:
        type: string
      timestamp:
        type: integer
        format: int64
  Transfers:
     type: "object"
     properties:
      total_transfer:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      transfers:
        type: array
        items:
         $ref: '#/definitions/Transfer'
  Event:
    type: "object"
    properties:
      blockNumber:
        type: integer
        format: int64
      eventIndex:
        type: integer
        format: int16
      section:
        type: string
      method:
        type: string
      phase:
        type: string
      types:
        type: string
      data:
        type: string
      doc:
        type: string
      timestamp:
        type: string
        format: int64
  Events:
     type: "object"
     properties:
      total_event:
        type: integer
        format: int64
      at_page:
        type: integer
        format: int64
      total_page:
        type: integer
        format: int64
      events:
        type: array
        items:
         $ref: '#/definitions/Event'
  Error:
    type: "object"
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string